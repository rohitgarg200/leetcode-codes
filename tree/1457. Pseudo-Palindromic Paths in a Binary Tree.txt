/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res=0;
    int pseudoPalindromicPaths (TreeNode* root) {
        vector<int>ret(10,0);
        
        if(root!=NULL)
        solve(root,ret);
        return res;
        
    }
    void solve(TreeNode* root,vector<int>&ret){
        ret[root->val]++;
        if(root->left==NULL && root->right==NULL){
            int c=0;
            for(int i=1;i<10;i++){
                //cout<<i<<" "<<ret[i]<<endl;
                if(ret[i]%2==1){
                    c++;
                }
            }
            if(c<=1){
                res++;
            }
            //cout<<c<<endl;
            ret[root->val]--;
            return ;
            
        }
        
        if(root->left!=NULL)
        solve(root->left,ret);
       // ret[root->val]--;
        if( root->right!=NULL)
        solve(root->right,ret);
        
        ret[root->val]--;
        
    }
    
};