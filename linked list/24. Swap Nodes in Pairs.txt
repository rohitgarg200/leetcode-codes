/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
            if(head==NULL || head->next==NULL){
                    return head;
            }
            
            ListNode*temp1=head->next;
            if(head->next==NULL){
                    return head;
            }
            ListNode* temp;
            ListNode* prev=NULL;
            int c=-1;
            while(head!=NULL && head->next!=NULL){
                    c++;
                    temp=head->next;
                    if(c!=0)
                    prev->next=temp;
                   // if(temp->next!=NULL)
                    head->next=temp->next;
                    temp->next=head;
                    prev=head;
                    head=head->next;
                    
}
            return temp1;
        
    }
};