/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
        int h=-1,h1=-1;
        bool solve(TreeNode* root,int x,int y,int ph){
                if(root==NULL){
                        return 0;
                }
                if(root->left!=NULL && root->right!=NULL && root->left->val==x && root->right->val==y){
                        return 0;
                }
                if(root->left!=NULL && root->right!=NULL &&root->left->val==y && root->right->val==x){
                        return 0;
                }
                if(root->val==x){
                h=ph;        
                }
                if(root->val==y){
                        h1=ph;
                }
                if(h!=-1 && h1==h){
                        return 1;
                }
                return max(solve(root->left,x,y,ph+1),solve(root->right,x,y,ph+1));
                
        
        
        
        }
    bool isCousins(TreeNode* root, int x, int y) {
            return solve(root,x,y,0);
        
    }
};