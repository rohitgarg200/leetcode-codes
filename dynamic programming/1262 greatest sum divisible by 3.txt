class Solution {
public:
    int maxSumDivThree(vector<int>& nums) {
         /*vector<int>a;
        vector<int>b;
        int res=0,c=0;
        for(int i=0;i<nums.size();i++){
            c=nums[i]%3;
            if(c==0)
                res+=nums[i];
            else if(c==1)
                a.push_back(nums[i]);
            else
                b.push_back(nums[i]);
        }
        //sort(a.rbegin(),a.rend());
        //sort(b.rbegin(),b.rend());
        int size1=nums.size();
        int size2=b.size();
        */
        int size1=nums.size();
        //vector<vector<int>>c(size1,vector<int>(3,0));
      //  c[0][nums[0]%3]=nums[0];
        //c[0][nums[0]%3+3]=nums[0];
        int t=0;
        vector<int>a(3,0);
        a[nums[0]%3]=nums[0];
        vector<int> b(3,0);
        for(int i=1;i<size1;i++){
            b[0]=a[0];
            b[1]=a[1];
            b[2]=a[2];
            for(int j=0;j<3;j++){
                   int t=(j+nums[i])%3;
                if(a[j]!=0)
                { b[t]=max(a[t],a[j]+nums[i]);
                 
                }
                if(b[nums[i]%3]==0){
                        b[nums[i]%3]=nums[i];
                        
                    }
                
                
            //cout<<a[j]<<endl;
            }
            a[0]=max(a[0],b[0]);
            a[1]=max(a[1],b[1]);
            a[2]=max(a[2],b[2]);
        }
        return a[0];
        
        /*
        for(int i=1;i<size1;i++){
            for(int j=0;j<3;j++){
                int t=(j+nums[i])%3;
                if(t>=0){
                   // if(c[i-1][t]!=0)
                c[i][t]=max(c[i-1][j]+nums[i],c[i-1][t]);
               // }
                //else{
                    
                }
             cout<<c[i][j]<<" ";   
            }
            cout<<endl;
        }
        return c[size1-1][0];
        
        */
    }
};