class Solution {
public:
    // this solution is partially correct 
    /*int solve(vector<int>& a,int total,int index,vector<vector<int>> &dp,int take){
        if(index>=10001){
            return total;
        }
        if(dp[index][take]!=-1){
            return dp[index][take];
        }
        int ans1=0,ans2=0;
        ans1=solve(a,total,index+1,dp,0);
      // this is partially correct 
      / if(a[index]!=0){
        a[index-1]=0;
        if(index!=10000)
        a[index+1]=0;/
        ans2=solve(a,total+a[index]*index,index+2,dp,1);}
        dp[index][take]= max(ans1,ans2);
        return dp[index][take];
    }*/
    int deleteAndEarn(vector<int>& nums) {
        int y=0;
        if(nums.size()>0)
        y=*max_element(nums.begin(),nums.end());
        else{
            return 0;
        }
        vector<int>a(y+1,0);
        vector<vector<int>> dp(y+1,vector<int>(2,0));
        for(int i=0;i<nums.size();i++){
            a[nums[i]]++;
        }
        // in this solution i use 2 d vector in 0 index left that element and at second // index i take that element
        
        for(int i=1;i<=y;i++){
            dp[i][0]=max(dp[i-1][0],dp[i-1][1]);
            dp[i][1]=a[i]*i+dp[i-1][0];
        }
        return max(dp[y][0],dp[y][1]);
        // int res=solve(a,0,1,dp,0);
        //return res;
        
    }
};