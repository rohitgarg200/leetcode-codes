/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
      //  int ret=INT_MIN;
        
        int find(TreeNode* root,int v){
                if(root==NULL){
                        return v;
                }
                else{
                        
         return max(v,max(find(root->left,v+root->val),find(root->right,v+root->val)));
                        
                }
        }
        
        
        int check(TreeNode* root,int ret){
                if(root==NULL){
                return ret ;
                }
                else{
        
        
        ret=max(ret,root->val+find(root->left,0)+find(root->right,0));
               
        return max(check(root->left,ret),check(root->right,ret)) ;
                }
        }
        
        
    int maxPathSum(TreeNode* root) {
        int ret=INT_MIN;   
            return check(root,ret);
            //return ret;
            
            
            
        
    }
};