/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
        bool check(TreeNode* root,vector<int>&arr,int index){
        
                if(index==arr.size()-1 && root!=NULL && arr[index]==root->val && root->left==NULL && root->right==NULL){
                        return 1;
                }
                if(index>=arr.size() || root==NULL){
                return 0;        
                }
                if(root->val==arr[index]){
                        return max(check(root->left,arr,index+1),check(root->right,arr,index+1));
                }
                return 0;
                
                
                        }
        
        
    bool isValidSequence(TreeNode* root, vector<int>& arr) {
           
            
            return check(root,arr,0);
            
        
    }
};