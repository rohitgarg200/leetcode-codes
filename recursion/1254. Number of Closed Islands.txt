class Solution {
public:
    int closedIsland(vector<vector<int>>& g) {
        vector<vector<int>>v(g.size(),vector<int>(g[0].size(),0));
        int n=g.size();
        int m=g[0].size();
        for(int i=0;i<g.size();i++){
            if(v[i][0]==0 && g[i][0]==0){
                solve(v,g,i,0);
            }
            if(v[i][m-1]==0 && g[i][m-1]==0){
                solve(v,g,i,m-1);
            }
            
        }
        int value=0;
            for(int j=0;j<m;j++){
            if(v[0][j]==0 && g[0][j]==0){
                solve(v,g,0,j);
            }
            if(v[n-1][j]==0 && g[n-1][j]==0){
                solve(v,g,n-1,j);
            }
               
            }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(v[i][j]==0 && g[i][j]==0){
                    solve(v,g,i,j);
                    value=value+1;
                    cout<<i<<" "<<j<<endl;
                }
                else{
                    v[i][j]=1;
                }
            }
        }
        return value;
    }
        
    
    void solve(vector<vector<int>>&v,vector<vector<int>>&g,int i,int j){
        if(i<0 || j<0 || i>=v.size() || j>=v[0].size()){
            return ;
        }
        if(v[i][j]==1 || g[i][j]==1){
            return ;
        }
        v[i][j]=1;
        if(g[i][j]==0){
            g[i][j]=1;
            //v[i][j]=1;
            solve(v,g,i-1,j);
            solve(v,g,i+1,j);
            solve(v,g,i,j-1);
            solve(v,g,i,j+1);
        }else{
            
            return ;
        }
        return ;
        
    }
};